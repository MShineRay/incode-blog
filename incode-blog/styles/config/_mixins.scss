// Prefix
/* @include prefix*/
@mixin prefix($declarations, $prefixes: ()) {
  @each $property, $value in $declarations {
    @each $prefix in $prefixes {
      #{'-' + $prefix + '-' + $property}: $value;
    }
    #{$property}: $value;
  }
}

// Rounded Corners
/* @include rounded(0.5em)*/
@mixin rounded($radius: 0.5em) {
  @include prefix(
    (
      border-radius: $radius,
    ),
    webkit moz
  );
}

// Remove Button Style Mixin
/* @include remove-button-style */
@mixin remove-button-style {
  background: none;
  color: inherit;
  border: none;
  padding: 0;
  font: inherit;
  cursor: pointer;
  outline: inherit;
}

// CSS Transition
/* @include transition(all,0.3s,ease-out); */
@mixin transition($what: all, $time: 0.3s, $how: ease-in-out) {
  @include prefix(
    (
      transition: $what $time $how,
    ),
    webkit moz
  );
}

// Font Smoothing
/* @include font-smoothing(antialiased); */
@mixin font-smoothing($value: antialiased) {
  @if $value == antialiased {
    -webkit-font-smoothing: antialiased;
    -moz-osx-font-smoothing: grayscale;
    text-rendering: optimizeLegibility;
    text-shadow: rgba(0, 0, 0, 0.01) 0 0 1px;
  } @else {
    -webkit-font-smoothing: subpixel-antialiased;
    -moz-osx-font-smoothing: auto;
  }
}

// Placeholder
/* @include placeholder */
@mixin placeholder {
  &::-webkit-input-placeholder {
    @content;
  }
  &:-moz-placeholder {
    @content;
  }
  &::-moz-placeholder {
    @content;
  }
  &:-ms-input-placeholder {
    @content;
  }
}
